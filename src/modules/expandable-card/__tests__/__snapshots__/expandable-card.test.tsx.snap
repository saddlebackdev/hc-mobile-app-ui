// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExpandableCard Rendering: Card card renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#FFFFFF",
        "borderRadius": 10,
        "width": "100%",
      },
    ]
  }
  testID="card"
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 0,
          "paddingLeft": 22,
          "paddingRight": 22,
          "paddingTop": 22,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#1C2530",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "700",
            "textAlign": "left",
          },
        ]
      }
      testID="card-title"
      variant="h4"
    >
      Title
    </Text>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 12,
          "left": 12,
          "right": 12,
          "top": 12,
        }
      }
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="card-close-button"
    >
      <Image
        source="test-file-stub"
        style={
          Array [
            Object {
              "height": 14,
              "width": 14,
            },
          ]
        }
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "paddingBottom": 22,
          "paddingLeft": 22,
          "paddingRight": 22,
          "paddingTop": 22,
        },
      ]
    }
    testID="card-content"
  />
</View>
`;

exports[`ExpandableCard Rendering: Tile renders subTitle Marker properly 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    Object {
      "bottom": 12,
      "left": 12,
      "right": 12,
      "top": 12,
    }
  }
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
      "width": "70%",
    }
  }
  testID="tile"
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#1C2530",
          "borderRadius": 10,
          "height": 58,
          "justifyContent": "center",
          "marginRight": 11,
          "width": 58,
        },
      ]
    }
    testID="tile-content"
  >
    <View />
  </View>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
        ]
      }
    >
      <Text
        inversed={false}
        style={
          Array [
            Object {
              "color": "#1C2530",
              "fontFamily": "System",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginBottom": 4,
              "marginTop": 4,
              "textAlign": "left",
            },
          ]
        }
        testID="tile-subtitle"
      >
        Some Subtitle
      </Text>
      <View
        style={
          Array [
            Object {
              "borderRadius": 12,
              "height": 12,
              "marginLeft": 10,
              "marginTop": 1,
              "overflow": "hidden",
              "width": 12,
            },
          ]
        }
        testID="subtitle-marker"
      >
        <Text>
          O
        </Text>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
        ]
      }
    >
      <Text
        inversed={false}
        style={
          Array [
            Object {
              "color": "#1C2530",
              "fontFamily": "System",
              "fontSize": 16,
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        testID="tile-title"
        variant="h4"
      >
        Some Title
      </Text>
    </View>
  </View>
</View>
`;

exports[`ExpandableCard Rendering: Tile renders title marker properly 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    Object {
      "bottom": 12,
      "left": 12,
      "right": 12,
      "top": 12,
    }
  }
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
      "width": "70%",
    }
  }
  testID="tile"
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#1C2530",
          "borderRadius": 10,
          "height": 58,
          "justifyContent": "center",
          "marginRight": 11,
          "width": 58,
        },
      ]
    }
    testID="tile-content"
  >
    <View />
  </View>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
        ]
      }
    >
      <Text
        inversed={false}
        style={
          Array [
            Object {
              "color": "#1C2530",
              "fontFamily": "System",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginBottom": 4,
              "marginTop": 4,
              "textAlign": "left",
            },
          ]
        }
        testID="tile-subtitle"
      >
        Some Subtitle
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
        ]
      }
    >
      <Text
        inversed={false}
        style={
          Array [
            Object {
              "color": "#1C2530",
              "fontFamily": "System",
              "fontSize": 16,
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        testID="tile-title"
        variant="h4"
      >
        Some Title
      </Text>
      <View
        style={
          Array [
            Object {
              "borderRadius": 12,
              "height": 12,
              "marginLeft": 10,
              "marginTop": 1,
              "overflow": "hidden",
              "width": 12,
            },
          ]
        }
        testID="title-marker"
      >
        <Text>
          O
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`ExpandableCard Rendering: Tile should set tile color to passed tileColor value 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    Object {
      "bottom": 12,
      "left": 12,
      "right": 12,
      "top": 12,
    }
  }
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
      "width": "70%",
    }
  }
  testID="tile"
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#00AEEF",
          "borderRadius": 10,
          "height": 58,
          "justifyContent": "center",
          "marginRight": 11,
          "width": 58,
        },
      ]
    }
    testID="tile-content"
  >
    <View />
  </View>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
        ]
      }
    >
      <Text
        inversed={false}
        style={
          Array [
            Object {
              "color": "#1C2530",
              "fontFamily": "System",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginBottom": 4,
              "marginTop": 4,
              "textAlign": "left",
            },
          ]
        }
        testID="tile-subtitle"
      >
        Some Subtitle
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
        ]
      }
    >
      <Text
        inversed={false}
        style={
          Array [
            Object {
              "color": "#1C2530",
              "fontFamily": "System",
              "fontSize": 16,
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        testID="tile-title"
        variant="h4"
      >
        Some Title
      </Text>
    </View>
  </View>
</View>
`;

exports[`ExpandableCard Rendering: Tile tile renders correctly 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    Object {
      "bottom": 12,
      "left": 12,
      "right": 12,
      "top": 12,
    }
  }
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "opacity": 1,
      "width": "70%",
    }
  }
  testID="tile"
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#1C2530",
          "borderRadius": 10,
          "height": 58,
          "justifyContent": "center",
          "marginRight": 11,
          "width": 58,
        },
      ]
    }
    testID="tile-content"
  >
    <View />
  </View>
  <View
    style={
      Array [
        Object {},
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
        ]
      }
    >
      <Text
        inversed={false}
        style={
          Array [
            Object {
              "color": "#1C2530",
              "fontFamily": "System",
              "fontSize": 16,
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        testID="tile-title"
        variant="h4"
      >
        Title
      </Text>
    </View>
  </View>
</View>
`;
